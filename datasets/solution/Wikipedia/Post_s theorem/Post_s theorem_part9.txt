jump: If O is an oracle to the halting problem of a machine T′', then ψO(m)ψ^O(m) is the same as "there exists m1_1 such that T′' starting with input m is at the halting state after m1_1 steps". Thus: ψO(m)=∃m1:ψH(m,m1)ψ^O(m)=_1:ψ_H(m,m_1) where ψH(m,m1)ψ_H(m,m_1) is a first-order formula that formalizes T′'. If T′' is a Turing machine (with no oracle), ψH(m,m1)ψ_H(m,m_1) is in Σ00=Π00Σ_0^0=Π_0^0 (i.e. it has no unbounded quantifiers). Since there is a finite number of numbers m satisfying m<2n1<2^n_1, we may choose the same number of steps for all of them: there is a number m1_1, such that T′' halts after m1_1 steps precisely on those inputs m<2n1<2^n_1 for which it halts at all. Moving to prenex normal form, we get that the oracle machine halts on input n if and only if the following formula is satisfied: φ(n)=∃n1∃m1∀m2:(ψH(m,m2)→(Om=1))∧(¬ψH(m,m1)→(Om=0)))∧φO1(n,n1)φ(n)=_1_1_2:(ψ_H(m,m_2)→(O_m=1))(¬ψ_H(m,m_1)→(O_m=0)))φ_O_1(n,n_1) (informally, there is a "maximal number of steps"m1_1 such every oracle that does not halt within the first m1_1 steps does not stop at all; however, for everym2_2, each oracle that halts after m2_2 steps does halt). Note that we may replace both n1_1 and m1_1 by a single number - their maximum - without changing the truth value of φ(n)φ(n). Thus we may write: φ(n)=∃n1∀m2:(ψH(m,m2)→(Om=1))∧(¬ψH(m,n1)→(Om=0)))∧φO1(n,n1)φ(n)=_1_2:(ψ_H(m,m_2)→(O_m=1))(¬ψ_H(m,n_1)→(O_m=0)))φ_O_1(n,n_1) For the oracle to the halting problem over Turing machines, ψH(m,m1)ψ_H(m,m_1) is in Π00Π_0^0 and φ(n)φ(n) is in Σ20Σ_2^0. Thus every set that is recursively enumerable by an oracle machine with an oracle for ∅(1)∅^(1), is in Σ20Σ_2^0. The converse is true as well: Suppose φ(n)φ(n) is a formula in Σ20Σ_2^0 with k1_1 existential quantifiers followed by k2_2 universal quantifiers. Equivalently, φ(n)φ(n) has k1_1> existential quantifiers followed by a negation of a formula in Σ10Σ_1^0; the latter formula can be enumerated by a Turing machine and can thus be checked immediately by an oracle for ∅(1)∅^(1). We may thus enumerate the k1_1–tuples of natural numbers and run an oracle machine with an oracle for ∅(1)∅^(1) that goes through all of them until it finds a satisfaction for the formula. This oracle machine halts on precisely the set of natural numbers satisfying φ(n)φ(n), and thus enumerates its corresponding set. Higher Turing