example: For example, for a prefix-free Turing machine with binary alphabet and no blank symbol, we may use the following notations: Ak_k is the 1-ary symbol for the configuration of the whole tape after k steps (which we may write as a number with LSB first, the value of the m-th location on the tape being its m-th least significant bit). In particular A0_0 is the initial configuration of the tape, which corresponds the input to the machine. Bk_k is the 1-ary symbol for the Turing machine state after k steps. In particular, B0=qI_0=q_I, the initial state of the Turing machine. Ck_k is the 1-ary symbol for the Turing machine location on the tape after k steps. In particular C0=0_0=0. M(q,b)(q,b) is the transition function of the Turing machine, written as a function from a doublet (machine state, bit read by the machine) to a triplet (new machine state, bit written by the machine, +1 or -1 machine movement along the tape). bit(j,m)(j,m) is the j-th bit of a number m. This can be written as a first-order arithmetic formula with no unbounded quantifiers. For a prefix-free Turing machine we may use, for input n, the initial tape configuration t(n)=cat(2ceil(log2n)−1,0,n)(n)=cat(2^ceil(log_2n)-1,0,n) where cat stands for concatenation; thus t(n)(n) is a log⁡(n)−log(n)-length string of 1−s1-s followed by 00 and then by n. The operation of the Turing machine at the first n1_1 steps can thus be written as the conjunction of the initial conditions and the following formulas, quantified over k for all k<n1<n_1: (Bk+1,bit(Ck,Ak+1),D)=M(Bk,bit(Ck,Ak))(B_k+1,bit(C_k,A_k+1),D)=M(B_k,bit(C_k,A_k)). Since M has a finite domain, this can be replaced by a first-order quantifier-free arithmetic formula. The exact formula obviously depends on M. Ck+1=Ck+D_k+1=C_k+D ∀j:j≠Ck→bit(j,Ak+1)=bit(j,Ak):j_k(j,A_k+1)=bit(j,A_k). Note that at the first n1_1 steps, T never arrives at a location along the tape greater than n1_1. Thus the universal quantifier over j can be bounded by n1_1+1, as bits beyond this location have no relevance for the machine's operation. T halts on input n at time n1_1 at most if and only if φ(n,n1)φ(n,n_1) is satisfied, where: φ(n,n1)=(A0=t(n))∧(B0=qI)∧(C0=0)∧(Bn1=qH)∧∀k<n1:((Bk+1,bit(Ck,Ak+1),1)=M(Bk,bit(Ck,Ak))∧Ck+1=Ck+1)∨((Bk+1,bit(Ck,Ak+1),−1)=M(Bk,bit(Ck,Ak))∧Ck+1=Ck−1))∧∀j<n1+1:j≠Ck→(bit(j,Ak+1)=bit(j,Ak))φ(n,n_1)= (A_0=t(n))(B_0=q_I)(C_0=0)(B_n_1=q_H) <n_1:((B_k+1,bit(C_k,A_k+1),1)=M(B_k,bit(C_k,A_k))_k+1=C_k+1) ((B_k+1,bit(C_k,A_k+1),-1)=M(B_k,bit(C_k,A_k))_k+1=C_k-1)) <n_1+1:j_k→(bit(j,A_k+1)=bit(j,A_k)) This is a first-order arithmetic formula with no unbounded quantifiers, i.e. it is in Σ00Σ_0^0. Recursively enumerable