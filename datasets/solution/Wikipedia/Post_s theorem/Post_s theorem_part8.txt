machines: Similarly, the operation of an oracle machine T with an oracle O that halts after at most n1_1 steps on input n can be described by a first-order formula φO(n,n1)φ_O(n,n_1), except that the formula φ1(n,n1)φ_1(n,n_1) now includes: A new predicate, Om_m, giving the oracle answer. This predicate must satisfy some formula to be discussed below. An additional tape - the oracle tape - on which T has to write the number m for every call O(m) to the oracle; writing on this tape can be logically formalized in a similar manner to writing on the machine's tape. Note that an oracle machine that halts after at most n1_1 steps has time to write at most n1_1 digits on the oracle tape. So the oracle can only be called with numbers m satisfying m<2n1<2^n_1. If the oracle is for a decision problem, Om_m is always "Yes" or "No", which we may formalize as 0 or 1. Suppose the decision problem itself can be formalized by a first-order arithmetic formula ψO(m)ψ^O(m). Then T halts on n after at most n1_1 steps if and only if the following formula is satisfied: φO(n,n1)=∀m<2n1:((ψO(m)→(Om=1))∧(¬ψO(m)→(Om=0)))∧φO1(n,n1)φ_O(n,n_1)=<2^n_1:((ψ^O(m)→(O_m=1))(¬ψ^O(m)→(O_m=0)))φ_O_1(n,n_1) where φO1(n,n1)φ_O_1(n,n_1) is a first-order formula with no unbounded quantifiers. Turing