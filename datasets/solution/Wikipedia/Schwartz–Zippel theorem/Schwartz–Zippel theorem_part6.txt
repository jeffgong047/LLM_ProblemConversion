testing: Given n∈N∈ℕ, is n a prime number? A simple randomized algorithm developed by Manindra Agrawal and Somenath Biswas can determine probabilistically whether n is prime and uses polynomial identity testing to do so. They propose that all prime numbers n (and only prime numbers) satisfy the following polynomial identity: (1+z)n=1+zn(modn).(1+z)^n=1+z^n( n). This is a consequence of the Frobenius endomorphism. Let Pn(z)=(1+z)n−1−zn.𝒫_n(z)=(1+z)^n-1-z^n. Then Pn(z)=0(modn)𝒫_n(z)=0 ( n) iff n is prime. The proof can be found in [4]. However, since this polynomial has degree n, where n may or may not be a prime, the Schwartz–Zippel method would not work. Agrawal and Biswas use a more sophisticated technique, which divides Pn𝒫_n by a random monic polynomial of small degree. Prime numbers are used in a number of applications such as hash table sizing, pseudorandom number generators and in key generation for cryptography. Therefore, finding very large prime numbers (on the order of (at least) 10350≈2102410^350≈2^1024) becomes very important and efficient primality testing algorithms are required. Perfect