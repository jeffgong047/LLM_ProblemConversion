6: SPACE(n) ≠ PTIME. To see it, assume the contrary, thus any problem decided in space O(n)(n) is decided in time O(nc)(n^c), and any problem L decided in space O(nb)(n^b) is decided in time O((nb)c)=O(nbc)((n^b)^c)=O(n^bc). Now P:=⋃k∈NDTIME(nk)𝖯:=⋃_k∈ℕ𝖣𝖳𝖨𝖬𝖤(n^k), thus P is closed under such a change of bound, that is ⋃k∈NDTIME(nbk)⊆P⋃_k∈ℕ𝖣𝖳𝖨𝖬𝖤(n^bk)⊆𝖯, so L∈P∈𝖯. This implies that for all b,SPACE(nb)⊆P⊆SPACE(n),𝖲𝖯𝖠𝖢𝖤(n^b)⊆𝖯⊆𝖲𝖯𝖠𝖢𝖤(n), but the space hierarchy theorem implies that SPACE(n2)⊈SPACE(n)𝖲𝖯𝖠𝖢𝖤(n^2)⊈𝖲𝖯𝖠𝖢𝖤(n), and Corollary 6 follows. Note that this argument neither proves that P⊈SPACE(n)𝖯⊈𝖲𝖯𝖠𝖢𝖤(n) nor that SPACE(n)⊈P𝖲𝖯𝖠𝖢𝖤(n)⊈𝖯, as to reach a contradiction we used the negation of both sentences, that is we used both inclusions, and can only deduce that at least one fails. It is currently unknown which fail(s) but conjectured that both do, that is that SPACE(n)𝖲𝖯𝖠𝖢𝖤(n) and P𝖯 are incomparable -at least for deterministic space.[2] This question is related to that of the time complexity of (nondeterministic) linear bounded automata which accept the complexity class NSPACE(n)𝖭𝖲𝖯𝖠𝖢𝖤(n) (aka as context-sensitive languages, CSL); so by the above CSL is not known to be decidable in polynomial time -see also Kuroda's two problems on LBA. See