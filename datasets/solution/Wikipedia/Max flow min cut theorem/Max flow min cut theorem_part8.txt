formulation: The max-flow problem and min-cut problem can be formulated as two primal-dual linear programs.[2] Max-flow (Primal) Min-cut (Dual) variables fuv_uv ∀(u,v)∈E∀(u,v) [a variable per edge] duv_uv ∀(u,v)∈E∀(u,v) [a variable per edge] zv_v ∀v∈V∖s,t∖{s,t} [a variable per non-terminal node] objective maximize ∑v:(s,v)∈Efsv∑_v:(s,v)f_sv [max total flow from source] minimize ∑(u,v)∈Ecuvduv∑_(u,v)c_uvd_uv [min total capacity of edges in cut] constraints subject to fuv≤cuv∀(u,v)∈E∑ufuv−∑wfvw=0v∈V∖s,tf_uv _uv ∀(u,v) ∑_uf_uv-∑_wf_vw =0 v∖{s,t} [a constraint per edge and a constraint per non-terminal node] subject to duv−zu+zv≥0∀(u,v)∈E,u≠s,v≠tdsv+zv≥1∀(s,v)∈E,v≠tdut−zu≥0∀(u,t)∈E,u≠sdst≥1if(s,t)∈Ed_uv-z_u+z_v ≥0 ∀(u,v),u,v d_sv+z_v ≥1 ∀(s,v),v d_ut-z_u ≥0 ∀(u,t),u d_st ≥1 if(s,t) [a constraint per edge] sign constraints fuv≥0∀(u,v)∈Ef_uv ≥0 ∀(u,v) duv≥0∀(u,v)∈Ezv∈R∀v∈V∖s,td_uv ≥0 ∀(u,v) z_v ∈ℝ ∖{s,t} The max-flow LP is straightforward. The dual LP is obtained using the algorithm described in dual linear program: the variables and sign constraints of the dual correspond to the constraints of the primal, and the constraints of the dual correspond to the variables and sign constraints of the primal. The resulting LP requires some explanation. The interpretation of the variables in the min-cut LP is: duv=1,ifu∈Sandv∈T(theedgeuvisinthecut)0,otherwise_uv=1, ifuandv(theedgeuvisinthecut) 0, otherwise zv=1,ifv∈S0,otherwise_v=1, ifv 0, otherwise The minimization objective sums the capacity over all the edges that are contained in the cut. The constraints guarantee that the variables indeed represent a legal cut:[3] The constraints duv−zu+zv≥0_uv-z_u+z_v≥0 (equivalent to duv≥zu−zv_uv_u-z_v) guarantee that, for non-terminal nodes u,v, if u is in S and v is in T, then the edge (u,v) is counted in the cut (duv≥1_uv≥1). The constraints dsv+zv≥1_sv+z_v≥1 (equivalent to dsv≥1−zv_sv≥1-z_v) guarantee that, if v is in T, then the edge (s,v) is counted in the cut (since s is by definition in S). The constraints dut−zu≥0_ut-z_u≥0 (equivalent to dut≥zu_ut_u) guarantee that, if u is in S, then the edge (u,t) is counted in the cut (since t is by definition in T). Note that, since this is a minimization problem, we do not have to guarantee that an edge is not in the cut - we only have to guarantee that each edge that should be in the cut, is summed in the objective function. The equality in the max-flow min-cut theorem follows from the strong duality theorem in linear programming, which states that if the primal program has an optimal solution, x*, then the dual program also has an optimal solution, y*, such that the optimal values formed by the two solutions are equal.