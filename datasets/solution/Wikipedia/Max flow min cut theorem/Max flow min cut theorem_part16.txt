Proof: Let G = (V, E) be a network (directed graph) with s and t being the source and the sink of G respectively. Consider the flow f computed for G by Ford–Fulkerson algorithm. In the residual graph (Gf ) obtained for G (after the final flow assignment by Ford–Fulkerson algorithm), define two subsets of vertices as follows: A: the set of vertices reachable from s in Gf Ac: the set of remaining vertices i.e. V − A Claim. value( f ) = c(A, Ac), where the capacity of an s-t cut is defined by c(S,T)=∑(u,v)∈S×Tcuv(S,T)=∑_(u,v)c_uv. Now, we know, value(f)=fout(A)−fin(A)(f)=f_out(A)-f_in(A) for any subset of vertices, A. Therefore, for value( f ) = c(A, Ac) we need: All outgoing edges from the cut must be fully saturated. All incoming edges to the cut must have zero flow. To prove the above claim we consider two cases: In G, there exists an outgoing edge (x,y),x∈A,y∈Ac(x,y),x,y^c such that it is not saturated, i.e., f (x, y) < cxy. This implies, that there exists a forward edge from x to y in Gf, therefore there exists a path from s to y in Gf, which is a contradiction. Hence, any outgoing edge (x, y) is fully saturated. In G, there exists an incoming edge (y,x),x∈A,y∈Ac(y,x),x,y^c such that it carries some non-zero flow, i.e., f (y, x) > 0. This implies, that there exists a backward edge from x to y in Gf, therefore there exists a path from s to y in Gf, which is again a contradiction. Hence, any incoming edge (y, x) must have zero flow. Both of the above statements prove that the capacity of cut obtained in the above described manner is equal to the flow obtained in the network. Also, the flow was obtained by Ford-Fulkerson algorithm, so it is the max-flow of the network as well. Also, since any flow in the network is always less than or equal to capacity of every cut possible in a network, the above described cut is also the min-cut which obtains the max-flow. A corollary from this proof is that the maximum flow through any set of edges in a cut of a graph is equal to the minimum capacity of all previous cuts. See