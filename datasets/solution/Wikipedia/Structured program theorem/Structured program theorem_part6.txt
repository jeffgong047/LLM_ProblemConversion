Cobol: This section needs additional citations for verification. Please help improve this article by adding citations to reliable sources in this section. Unsourced material may be challenged and removed. (August 2013) (Learn how and when to remove this template message) In the 1980s IBM researcher Harlan Mills oversaw the development of the COBOL Structuring Facility, which applied a structuring algorithm to COBOL code. Mills's transformation involved the following steps for each procedure. Identify the basic blocks in the procedure. Assign a unique label to each block's entry path, and label each block's exit paths with the labels of the entry paths they connect to. Use 0 for return from the procedure and 1 for the procedure's entry path. Break the procedure into its basic blocks. For each block that is the destination of only one exit path, reconnect that block to that exit path. Declare a new variable in the procedure (called L for reference). On each remaining unconnected exit path, add a statement that sets L to the label value on that path. Combine the resulting programs into a selection statement that executes the program with the entry path label indicated by L Construct a loop that executes this selection statement as long as L is not 0. Construct a sequence that initializes L to 1 and executes the loop. Note that this construction can be improved by converting some cases of the selection statement into subprocedures. See